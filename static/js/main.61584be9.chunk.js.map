{"version":3,"sources":["data.js","App.js","index.js"],"names":["data","error","resolution","App","state","compareA","compareB","comparisonResult","getA","getResult","handleInputChnage","name","event","setState","target","value","compare","similarity","distance","Math","floor","findResolution","maxmatch","found","map","errorRecord","className","onInput","this","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAaA,EAAO,CAClB,CACEC,MAAM,0wBAQNC,WAAY,4BAEd,CACED,MAAM,0wBAQNC,WAAY,gCAEd,CACED,MAAM,0wBAQNC,WAAY,iBAEd,CACED,MAAM,0wBAQNC,WAAY,oCCuCDC,E,4MA5EbC,MAAQ,CACNC,SAAU,GACVC,SAAU,GACVC,iBAAkB,EAClBC,KAAM,GACNC,UAAW,I,EAGbC,kBAAoB,SAACC,GAAD,OAAU,SAACC,GAC7B,EAAKC,SAAL,eACGF,EAAOC,EAAME,OAAOC,U,EAIzBC,QAAU,WACR,IAAIC,EAAaC,EAAS,EAAKd,MAAMC,SAAU,EAAKD,MAAME,UAC1D,EAAKO,SAAS,CACZN,iBAAkBY,KAAKC,MAAmB,IAAbH,M,EAIjCI,eAAiB,WACf,IAAInB,EAAa,+CACboB,EAAW,EACXC,GAAQ,EAEZvB,EAAKwB,KAAI,SAACC,GACR,IAAIR,EAAaC,EAAS,EAAKd,MAAMI,KAAMiB,EAAYxB,OAOvD,OALIqB,EAAWL,GAAcA,EAAa,KACxCK,EAAWL,EACXf,EAAauB,EAAYvB,WACzBqB,GAAQ,GAEH,QAGT,EAAKV,SAAS,CACZJ,UAAU,aAAD,OAAeP,EAAf,sBAAuCqB,EAAQJ,KAAKC,MAAe,IAATE,GAAgB,U,uDAKrF,OACE,yBAAKI,UAAU,aACb,yBAAKA,UAAU,SAAf,sCACA,yBAAKA,UAAU,wBACb,8BACEC,QAASC,KAAKlB,kBAAkB,YAChCgB,UAAU,UAEZ,8BACEC,QAASC,KAAKlB,kBAAkB,YAChCgB,UAAU,UAEZ,4BAAQG,QAASD,KAAKZ,QAASU,UAAU,OAAzC,WAGA,yBAAKA,UAAU,UAAf,aAAmCE,KAAKxB,MAAMG,mBAEhD,yBAAKmB,UAAU,YACf,yBAAKA,UAAU,wBACb,8BACEC,QAASC,KAAKlB,kBAAkB,QAChCgB,UAAU,UAEZ,4BAAQG,QAASD,KAAKP,eAAgBK,UAAU,OAAhD,eAGA,yBAAKA,UAAU,UAAUE,KAAKxB,MAAMK,iB,GAtE5BqB,aCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.61584be9.chunk.js","sourcesContent":["export const data = [\r\n  {\r\n    error: `Message               : Duplicate entry '6dad0a2b-173b-43e8-b41c-eb314456c927' for key 'PRIMARY'.\r\n    Element               : postInspectionFlow/processors/3 @ dota-qmp-sys-api-dev:post-inspection.xml:19 (QMP-T-Inspection)\r\n    Element XML           : <db:insert doc:name=\"QMP-T-Inspection\" doc:id=\"1303d030-9a1a-4045-aa27-a630e09b6d6a\" config-ref=\"MySQL_Database_Config_QMP\">\r\n                            <db:sql>{file::sql/insert-qmp-inspection-result.sql}</db:sql>\r\n                            <db:input-parameters>#[vars.varQmpInspectionResultParams]</db:input-parameters>\r\n                            </db:insert>\r\n    Error type            : DB:QUERY_EXECUTION\r\n    Payload Type          : org.mule.runtime.core.internal.streaming.bytes.ManagedCursorStreamProvider`,\r\n    resolution: '42 is the answer to life',\r\n  },\r\n  {\r\n    error: `Message               : Duplicate entry '342d18cf-a276-446d-a8df-10e1ee0dce4b' for key 'PRIMARY'.\r\n    Element               : postInspectionFlow/processors/3 @ dota-qmp-sys-api-dev:post-inspection.xml:19 (QMP-T-Inspection)\r\n    Element XML           : <db:insert doc:name=\"QMP-T-Inspection\" doc:id=\"1303d030-9a1a-4045-aa27-a630e09b6d6a\" config-ref=\"MySQL_Database_Config_QMP\">\r\n                            <db:sql>{file::sql/insert-qmp-inspection-result.sql}</db:sql>\r\n                            <db:input-parameters>#[vars.varQmpInspectionResultParams]</db:input-parameters>\r\n                            </db:insert>\r\n    Error type            : DB:QUERY_EXECUTION\r\n    Payload Type          : org.mule.runtime.core.internal.streaming.bytes.ManagedCursorStreamProvider`,\r\n    resolution: 'dont worry, Everything is ok',\r\n  },\r\n  {\r\n    error: `Message               : Duplicate entry '6dad0a2b-173b-43e8-b41c-eb314456c927' for key 'PRIMARY'.\r\n    Element               : postInspectionFlow/processors/3 @ dota-qmp-sys-api-dev:post-inspection.xml:19 (QMP-T-Inspection)\r\n    Element XML           : <db:insert doc:name=\"QMP-T-Inspection\" doc:id=\"1303d030-9a1a-4045-aa27-a630e09b6d6a\" config-ref=\"MySQL_Database_Config_QMP\">\r\n                            <db:sql>{file::sql/insert-qmp-inspection-result.sql}</db:sql>\r\n                            <db:input-parameters>#[vars.varQmpInspectionResultParams]</db:input-parameters>\r\n                            </db:insert>\r\n    Error type            : DB:QUERY_EXECUTION\r\n    Payload Type          : org.mule.runtime.core.internal.streaming.bytes.ManagedCursorStreamProvider`,\r\n    resolution: 'Change 3 to 4',\r\n  },\r\n  {\r\n    error: `Message               : Duplicate entry '6dad0a2b-173b-43e8-b41c-eb314456c927' for key 'PRIMARY'.\r\n    Element               : postInspectionFlow/processors/3 @ dota-qmp-sys-api-dev:post-inspection.xml:19 (QMP-T-Inspection)\r\n    Element XML           : <db:insert doc:name=\"QMP-T-Inspection\" doc:id=\"1303d030-9a1a-4045-aa27-a630e09b6d6a\" config-ref=\"MySQL_Database_Config_QMP\">\r\n                            <db:sql>{file::sql/insert-qmp-inspection-result.sql}</db:sql>\r\n                            <db:input-parameters>#[vars.varQmpInspectionResultParams]</db:input-parameters>\r\n                            </db:insert>\r\n    Error type            : DB:QUERY_EXECUTION\r\n    Payload Type          : org.mule.runtime.core.internal.streaming.bytes.ManagedCursorStreamProvider`,\r\n    resolution: 'This error is just to scare you',\r\n  },\r\n]","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport * as distance from \"jaro-winkler\";\nimport { data } from \"./data\";\n\nclass App extends Component {\n  state = {\n    compareA: \"\",\n    compareB: \"\",\n    comparisonResult: 0,\n    getA: \"\",\n    getResult: \"\",\n  };\n\n  handleInputChnage = (name) => (event) => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  compare = () => {\n    let similarity = distance(this.state.compareA, this.state.compareB);\n    this.setState({\n      comparisonResult: Math.floor(similarity * 100),\n    });\n  };\n\n  findResolution = () => {\n    let resolution = \"Sorry!! There is no resolution to this error\";\n    let maxmatch = 0;\n    let found = false\n\n    data.map((errorRecord) => {\n      let similarity = distance(this.state.getA, errorRecord.error);\n\n      if (maxmatch < similarity && similarity > 0.90) {\n        maxmatch = similarity\n        resolution = errorRecord.resolution;\n        found = true\n      }\n      return null;\n    });\n\n    this.setState({\n      getResult: `Solution: ${resolution}. Match %: ${found ? Math.floor(maxmatch*100) : 'N/A'}`,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"title\">Text Comparison using Jaro Winkler</div>\n        <div className=\"comparison-container\">\n          <textarea\n            onInput={this.handleInputChnage(\"compareA\")}\n            className=\"input\"\n          />\n          <textarea\n            onInput={this.handleInputChnage(\"compareB\")}\n            className=\"input\"\n          />\n          <button onClick={this.compare} className=\"btn\">\n            Compare\n          </button>\n          <div className=\"result\">Match % - {this.state.comparisonResult}</div>\n        </div>\n        <div className=\"divider\"></div>\n        <div className=\"resolution-container\">\n          <textarea\n            onInput={this.handleInputChnage(\"getA\")}\n            className=\"input\"\n          />\n          <button onClick={this.findResolution} className=\"btn\">\n            Resolution?\n          </button>\n          <div className=\"result\">{this.state.getResult}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}